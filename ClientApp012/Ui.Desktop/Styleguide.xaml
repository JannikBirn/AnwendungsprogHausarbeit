<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:De.HsFlensburg.ClientApp012.Ui.Desktop">


    <!-- Colors -->
    <SolidColorBrush x:Key="Static.Page.Background"
                     Color="#202225" />
    <SolidColorBrush x:Key="Static.Background"
                     Color="#FF2F3136" />
    <SolidColorBrush x:Key="Static.Foreground"
                     Color="#707070" />
    <SolidColorBrush x:Key="Static.Red"
                     Color="Red" />
    <SolidColorBrush x:Key="Static.Blue"
                     Color="Blue" />
    <SolidColorBrush x:Key="Static.Green"
                     Color="Green" />

    <!-- Button Colors -->
    <SolidColorBrush x:Key="Static.Border"
                     Color="Transparent" />
    <SolidColorBrush x:Key="Button.MouseOver.Background"
                     Color="#FF555557" />
    <SolidColorBrush x:Key="Button.MouseOver.Border"
                     Color="Transparent" />
    <SolidColorBrush x:Key="Button.Pressed.Background"
                     Color="#FF87878B" />
    <SolidColorBrush x:Key="Button.Pressed.Border"
                     Color="Transparent" />
    <SolidColorBrush x:Key="Button.Disabled.Background"
                     Color="Transparent" />
    <SolidColorBrush x:Key="Button.Disabled.Border"
                     Color="Transparent" />
    <SolidColorBrush x:Key="Button.Disabled.Foreground"
                     Color="Transparent" />

    <!-- Button Focus Template -->
    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2"
                               SnapsToDevicePixels="true"
                               Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                               StrokeThickness="1"
                               StrokeDashArray="1 2" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Button Template -->
    <Style x:Key="DefaultButtonStyle"
           TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle"
                Value="{StaticResource FocusVisual}" />
        <Setter Property="Background"
                Value="{StaticResource Static.Background}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource Static.Border}" />
        <Setter Property="Foreground"
                Value="{StaticResource Static.Foreground}" />
        <Setter Property="FontFamily"
                Value="Roboto" />
        <Setter Property="FontSize"
                Value="24" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Padding"
                Value="5,2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter"
                                          Focusable="False"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted"
                                 Value="true">
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource Button.MouseOver.Background}" />
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource Button.MouseOver.Border}" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource Button.Pressed.Background}" />
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource Button.Pressed.Border}" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource Button.Disabled.Background}" />
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource Button.Disabled.Border}" />
                            <Setter Property="TextElement.Foreground"
                                    TargetName="contentPresenter"
                                    Value="{StaticResource Button.Disabled.Foreground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Button Template -->
    <Style x:Key="DefaultButtonStyleSmall"
           TargetType="{x:Type Button}">
        <Setter Property="Margin"
                Value="5,10,0,0" />
        <Setter Property="FocusVisualStyle"
                Value="{StaticResource FocusVisual}" />
        <Setter Property="Background"
                Value="{StaticResource Static.Background}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource Static.Border}" />
        <Setter Property="Foreground"
                Value="{StaticResource Static.Foreground}" />
        <Setter Property="FontFamily"
                Value="Roboto" />
        <Setter Property="FontSize"
                Value="14" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Padding"
                Value="3,2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter"
                                          Focusable="False"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted"
                                 Value="true">
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource Button.MouseOver.Background}" />
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource Button.MouseOver.Border}" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource Button.Pressed.Background}" />
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource Button.Pressed.Border}" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource Button.Disabled.Background}" />
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource Button.Disabled.Border}" />
                            <Setter Property="TextElement.Foreground"
                                    TargetName="contentPresenter"
                                    Value="{StaticResource Button.Disabled.Foreground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Default Grid -->
    <Style x:Key="DefaultGridStyle"
           TargetType="{x:Type Grid}">
        <Setter Property="Background"
                Value="{StaticResource Static.Page.Background}" />
    </Style>



    <!-- Back Button -->
    <Style TargetType="Button"
           x:Key="BackButton"
           BasedOn="{StaticResource DefaultButtonStyle}">
        <Setter Property="MinHeight"
                Value="{Binding ActualWidth, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Width"
                Value="60" />
        <Setter Property="HorizontalAlignment"
                Value="Left" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
    </Style>

    <!-- Default Label -->
    <Style x:Key="DefaultLabel"
           TargetType="{x:Type Label}">
        <Setter Property="Foreground"
                Value="{StaticResource Static.Foreground}" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="FontFamily"
                Value="Roboto" />
        <Setter Property="FontSize"
                Value="24" />
    </Style>
    <Style x:Key="TitleLabelStyle"
           TargetType="{x:Type Label}">
        <Setter Property="Foreground"
                Value="#707070" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Padding"
                Value="5" />
        <Setter Property="FontSize"
                Value="25" />
        <Setter Property="FontFamily"
                Value="Roboto" />
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="VerticalContentAlignment"
                Value="Top" />
    </Style>

    <!-- Default Label Jan -->
    <Style x:Key="DefaultLabelSmall"
           TargetType="{x:Type Label}">
        <Setter Property="Foreground"
                Value="{StaticResource Static.Foreground}" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="FontFamily"
                Value="Roboto" />
        <Setter Property="FontSize"
                Value="18" />
        <Setter Property="Padding"
                Value="3,2" />
        <Setter Property="FontWeight"
                Value="Bold" />

    </Style>

    <!-- Rectangle as line -->
    <Style x:Key="ReactangleLine"
           TargetType="{x:Type Rectangle}">
        <Setter Property="Fill"
                Value="{StaticResource Static.Foreground}" />
        <Setter Property="Height"
                Value="3" />
        <Setter Property="VerticalAlignment"
                Value="Bottom" />
    </Style>

    <!--Data Grid-->
    <Style x:Key="DefaultDataGrid"
           TargetType="{x:Type DataGrid}">
        <Setter Property="Background"
                Value="{StaticResource Static.Page.Background}" />
        <Setter Property="Foreground"
                Value="{StaticResource Static.Foreground}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource Static.Page.Background}" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="RowDetailsVisibilityMode"
                Value="VisibleWhenSelected" />
        <Setter Property="ScrollViewer.CanContentScroll"
                Value="true" />
        <Setter Property="ScrollViewer.PanningMode"
                Value="VerticalOnly" />
        <Setter Property="Stylus.IsFlicksEnabled"
                Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGrid}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="DG_ScrollViewer"
                                      Focusable="false">
                            <ScrollViewer.Template>
                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <Button Command="{x:Static DataGrid.SelectAllCommand}"
                                                Focusable="false"
                                                Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}"
                                                Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                                Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                        <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter"
                                                                        Grid.Column="1"
                                                                        Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                                CanContentScroll="{TemplateBinding CanContentScroll}"
                                                                Grid.ColumnSpan="2"
                                                                Grid.Row="1" />
                                        <ScrollBar x:Name="PART_VerticalScrollBar"
                                                   Grid.Column="2"
                                                   Maximum="{TemplateBinding ScrollableHeight}"
                                                   Orientation="Vertical"
                                                   Grid.Row="1"
                                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                                   Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                   ViewportSize="{TemplateBinding ViewportHeight}" />
                                        <Grid Grid.Column="1"
                                              Grid.Row="2">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <ScrollBar x:Name="PART_HorizontalScrollBar"
                                                       Grid.Column="1"
                                                       Maximum="{TemplateBinding ScrollableWidth}"
                                                       Orientation="Horizontal"
                                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                                       Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                       ViewportSize="{TemplateBinding ViewportWidth}" />
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </ScrollViewer.Template>
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping"
                               Value="true" />
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping"
                               Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll"
                        Value="false" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DataGridContentCellCentering"
           TargetType="{x:Type DataGridCell}">
        <Setter Property="TextBlock.TextAlignment"
                Value="Center" />
        <Setter Property="FontFamily"
                Value="Roboto" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Grid Background="{StaticResource Static.Page.Background}">
                        <ContentPresenter VerticalAlignment="Center" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CenterGridHeaderStyle"
           TargetType="DataGridColumnHeader">
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="Foreground"
                Value="{StaticResource Static.Foreground}" />
        <Setter Property="Height"
                Value="auto" />
        <Setter Property="FontFamily"
                Value="Roboto" />
        <Setter Property="FontSize"
                Value="12" />
    </Style>

    <Style x:Key="CheckBoxControlTemplate1"
           TargetType="{x:Type CheckBox}">
        <Setter Property="Foreground"
                Value="{StaticResource Static.Foreground}" />
        <Setter Property="Height"
                Value="auto" />
        <Setter Property="FontFamily"
                Value="Roboto" />
        <Setter Property="FontSize"
                Value="12" />
    </Style>

</ResourceDictionary>